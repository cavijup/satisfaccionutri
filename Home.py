import streamlit as st
import pandas as pd
from utils.data_loader import load_data, get_filtered_data
from utils.data_processing import (
    plot_satisfaction_by_category,
    identify_problem_areas,
    get_satisfaction_columns
)

# Configuraci칩n de la p치gina
st.set_page_config(
    page_title="Dashboard Encuesta Satisfacci칩n",
    page_icon="游늵",
    layout="wide",
    initial_sidebar_state="expanded"
)

# T칤tulo y descripci칩n
st.title("Dashboard de An치lisis - Encuesta de Satisfacci칩n de Entrega de Mercados")
st.markdown("""
Este dashboard presenta el an치lisis de las encuestas de satisfacci칩n del proceso de entrega de mercados
a comedores comunitarios, permitiendo identificar 치reas de mejora y fortalezas del programa.

Utilice la barra lateral para aplicar filtros y navegue entre las pesta침as para explorar distintos 
aspectos de los datos.
""")

# Cargar datos con indicador de progreso
with st.spinner('Cargando datos de Google Sheets...'):
    df = load_data()

if df.empty:
    st.error("No se pudieron cargar los datos. Verifica tus credenciales y la conexi칩n a Google Sheets.")
    st.stop()

# Mostrar indicador de conexi칩n exitosa
st.success(f"Datos cargados correctamente. Total de registros: {len(df)}")

# Sidebar para filtros
st.sidebar.title("Filtros")

# Filtro por fecha
if 'fecha' in df.columns:
    df['fecha'] = pd.to_datetime(df['fecha'], errors='coerce')
    valid_dates = df.dropna(subset=['fecha'])
    
    if not valid_dates.empty:
        min_date = valid_dates['fecha'].min().date()
        max_date = valid_dates['fecha'].max().date()
        
        date_range = st.sidebar.date_input(
            "Rango de fechas",
            [min_date, max_date],
            min_value=min_date,
            max_value=max_date
        )
    else:
        date_range = None
else:
    date_range = None

# Filtro por ubicaci칩n geogr치fica
if 'comuna' in df.columns:
    all_comunas = ["Todas"] + sorted([str(x) for x in df['comuna'].unique() if pd.notna(x)])
    selected_comuna = st.sidebar.selectbox("Comuna", all_comunas)
else:
    selected_comuna = None

if 'barrio' in df.columns:
    all_barrios = ["Todos"] + sorted([str(x) for x in df['barrio'].unique() if pd.notna(x)])
    selected_barrio = st.sidebar.selectbox("Barrio", all_barrios)
else:
    selected_barrio = None

if 'nodo' in df.columns:
    all_nodos = ["Todos"] + sorted([str(x) for x in df['nodo'].unique() if pd.notna(x)])
    selected_nodo = st.sidebar.selectbox("Nodo", all_nodos)
else:
    selected_nodo = None

# Aplicar filtros
filtered_df = get_filtered_data(df, date_range, selected_comuna, selected_barrio, selected_nodo)

# Mostrar n칰mero de encuestas filtradas
st.sidebar.metric("Total de encuestas filtradas", len(filtered_df))

# Bot칩n para refrescar datos
if st.sidebar.button("Refrescar Datos"):
    # Limpiar cach칠 y recargar
    st.cache_data.clear()
    st.experimental_rerun()

# M칠tricas generales
st.header("M칠tricas Generales")

# Calcular m칠tricas
satisfaction_cols = get_satisfaction_columns(filtered_df)

# Calcular satisfacci칩n general si hay columnas v치lidas
if satisfaction_cols:
    overall_satisfaction = filtered_df[satisfaction_cols].mean().mean()
else:
    overall_satisfaction = None

# Calcular plazos cumplidos si existe la columna
if '29plazos_entrega_mercados' in filtered_df.columns:
    plazos_cumplidos = (filtered_df['29plazos_entrega_mercados'].astype(str).str.lower() == 's칤').mean() * 100
else:
    plazos_cumplidos = None

# Calcular proceso sencillo si existe la columna
if '31pasos_recepcion_mercado' in filtered_df.columns:
    proceso_sencillo = (filtered_df['31pasos_recepcion_mercado'].astype(str).str.lower() == 'sencillo').mean() * 100
else:
    proceso_sencillo = None

# Mostrar m칠tricas en 3 columnas
col1, col2, col3 = st.columns(3)
with col1:
    if overall_satisfaction is not None:
        st.metric("Satisfacci칩n General", f"{overall_satisfaction:.2f}/5")
    else:
        st.metric("Satisfacci칩n General", "No disponible")
with col2:
    if plazos_cumplidos is not None:
        st.metric("Cumplimiento de Plazos", f"{plazos_cumplidos:.1f}%")
    else:
        st.metric("Cumplimiento de Plazos", "No disponible")
with col3:
    if proceso_sencillo is not None:
        st.metric("Proceso Sencillo", f"{proceso_sencillo:.1f}%")
    else:
        st.metric("Proceso Sencillo", "No disponible")

# 츼reas problem치ticas
st.subheader("Aspectos con Menor Satisfacci칩n")
problem_areas = identify_problem_areas(filtered_df)
if not problem_areas.empty:
    st.dataframe(problem_areas, use_container_width=True)
else:
    st.info("No hay suficientes datos para identificar 치reas problem치ticas.")

# Gr치ficos principales
st.header("An치lisis por Categor칤a")

# Gr치fico de satisfacci칩n por categor칤a
satisfaction_fig = plot_satisfaction_by_category(filtered_df)
if satisfaction_fig:
    st.plotly_chart(satisfaction_fig, use_container_width=True)
else:
    st.info("No hay suficientes datos para crear el gr치fico de satisfacci칩n por categor칤a.")

# Informaci칩n sobre navegaci칩n
st.header("Navegaci칩n por el Dashboard")
st.markdown("""
Utilice la barra lateral izquierda para navegar a las distintas secciones del dashboard:

1. **Abarrotes**: An치lisis detallado de la satisfacci칩n con abarrotes (granos, aceite, arroz, etc.)
2. **C치rnicos y Huevos**: An치lisis de la satisfacci칩n con carnes y huevos
3. **Frutas y Verduras**: An치lisis de la satisfacci칩n con frutas, verduras, hortalizas y tub칠rculos
4. **Proceso de Entrega**: Evaluaci칩n del proceso de entrega, tiempos y atenci칩n
5. **An치lisis Geogr치fico**: Comparativa de satisfacci칩n por ubicaci칩n geogr치fica

Cada secci칩n contiene gr치ficos interactivos y an치lisis detallados de los aspectos evaluados en la encuesta.
""")

# Instrucciones de uso
with st.expander("Instrucciones de Uso"):
    st.markdown("""
    ## C칩mo utilizar este dashboard
    
    1. **Filtros**: Use los controles en la barra lateral para filtrar por fecha, comuna, barrio y nodo.
    2. **M칠tricas Generales**: Vea un resumen de la satisfacci칩n general y otros indicadores clave.
    3. **An치lisis por Categor칤a**: Explore las distintas p치ginas para ver el an치lisis detallado de cada categor칤a.
    4. **An치lisis Geogr치fico**: Compare la satisfacci칩n entre diferentes regiones.
    5. **Refrescar Datos**: Utilice el bot칩n "Refrescar Datos" para obtener la informaci칩n m치s reciente.
    
    Para obtener m치s detalles sobre cualquier gr치fico, puede pasar el cursor sobre los elementos visuales.
    """)

# Footer
st.markdown("---")
st.markdown("Dashboard creado para el an치lisis de la encuesta de satisfacci칩n del proceso de entrega de mercados.")